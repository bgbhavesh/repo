@import 'global';
 
$themes: (
    dark: (
    backgroundColor:  $defaultBg,
    bgWhite:$bgWhite,
    bgColorHdr:$headerColor,
    bgColorftr:$footerColor,
    textColor: $defaultTextColor,  
    borderBottom:$borderBottom,
    iconColor:$iconColor,
    borderColor:$border,
    borderOne:$borderOne,
    borderTwo:$borderTwo,
    borderThree:$borderThree,
    borderFour:$borderFour,
    txtSuccess:$txtSuccess,
    txtWarning:$txtWarning,
    txtDanger:$txtDanger,
    txtOrange:$txtOrange,
    txtInfo:$txtInfo,
    txtGray:$txtGray,
    txtBlack:$txtBlack,
    txtWhite:$txtWhite,
    bgSuccess:$bgSuccess,
    bgDanger:$bgDanger,
    bgWarning:$bgWarning,
    bgBlue:$bgBlue,
    bgOrange:$bgOrange,
    bgLightGray:$bgLightGray,    
    bgGray:$bgGray,    
  ),
  yellow: (
    backgroundColor:  $primaryBg,
    bgWhite:$pbgWhite,
    bgColorHdr:$pheaderColor,
    bgColorftr:$pfooterColor,
      textColor: $primaryTextColor,  
      borderBottom:$pborderBottom,
      iconColor:$piconColor,
      borderColor:$pborder,
      borderOne:$pborderOne,
    borderTwo:$pborderTwo,
    borderThree:$pborderThree,
    borderFour:$pborderFour,    
    txtSuccess:$ptxtSuccess,
    txtWarning:$ptxtWarning,
    txtDanger:$ptxtDanger,
    txtOrange:$ptxtOrange,
    txtInfo:$ptxtInfo,
    txtGray:$ptxtGray,
    txtBlack:$ptxtBlack,
    txtWhite:$ptxtWhite,    
    bgSuccess:$pbgSuccess,
    bgDanger:$pbgDanger,
    bgWarning:$pbgWarning,
    bgBlue:$pbgBlue,
    bgOrange:$pbgOrange,
    bgLightGray:$pbgLightGray,    
    bgGray:$pbgGray,    
    
  ),
  green: (
    backgroundColor:  $quaternaryBg,
    bgWhite:$qbgWhite,
    bgColorHdr:$qheaderColor,
    bgColorftr:$qfooterColor,
      textColor: $quaternaryTextColor,  
      borderBottom:$qborderBottom,
      iconColor:$qiconColor,
      borderColor:$qborder,
      borderOne:$qborderOne,
      borderTwo:$qborderTwo,
      borderThree:$qborderThree,
    borderFour:$qborderFour,          
      txtSuccess:$qtxtSuccess,
      txtWarning:$qtxtWarning,
      txtDanger:$qtxtDanger,
      txtOrange:$qtxtOrange,
      txtInfo:$qtxtInfo,
      txtGray:$qtxtGray,
      txtBlack:$qtxtBlack,
    txtWhite:$qtxtWhite,      
      bgSuccess:$qbgSuccess,
      bgDanger:$qbgDanger,
      bgWarning:$qbgWarning,
      bgBlue:$qbgBlue,
      bgOrange:$qbgOrange,
    bgLightGray:$qbgLightGray,  
    bgGray:$qbgGray,    
        
  ),
  blue: (
    backgroundColor:  $secondaryBg,
    bgWhite:$sbgWhite,
    bgColorHdr:$sheaderColor,
    bgColorftr:$pfooterColor,
      textColor: $secondaryTextColor,  
      borderBottom:$sborderBottom,
      iconColor:$siconColor,
      borderColor:$sborder,
      borderOne:$sborderOne,
    borderTwo:$sborderTwo,
    borderThree:$sborderThree,
    borderFour:$sborderFour,       
    txtSuccess:$stxtSuccess,
    txtWarning:$stxtWarning,
    txtDanger:$stxtDanger,
    txtOrange:$stxtOrange,
    txtInfo:$stxtInfo,
    txtGray:$stxtGray,
    txtBlack:$stxtBlack,
    txtWhite:$stxtWhite,    
    bgSuccess:$sbgSuccess,
    bgDanger:$sbgDanger,
    bgWarning:$sbgWarning,
    bgBlue:$sbgBlue,
    bgOrange:$sbgOrange,
    bgLightGray:$sbgLightGray,    
    bgGray:$sbgGray,    
    
  ),
);

/*
 * Implementation of themes
 */
 @mixin themify($themes) {
    @each $theme, $map in $themes {
      .theme-#{$theme} & {
        $theme-map: () !global;
        @each $key, $submap in $map {
          $value: map-get(map-get($themes, $theme), '#{$key}');
          $theme-map: map-merge($theme-map, ($key: $value)) !global;
        }
        @content;
        $theme-map: null !global;
      }
    }
  }
  
  @function themed($key) {
    @return map-get($theme-map, $key);
  }